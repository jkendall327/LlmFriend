@page "/"
@using LLMFriend.Web.Components.Chat
@rendermode InteractiveServer

<PageTitle>LLM Friend</PageTitle>

<div class="chat-management">
    @if (!_chats.Any())
    {
        <button class="new-chat-button" @onclick="CreateNewChat">Start New Chat</button>
    }
    else
    {
        <button class="new-chat-button" @onclick="CreateNewChat">New Chat</button>
    }
</div>

@foreach (var chatId in _chats)
{
    <ChatInterface @key="chatId" OnClose="@(() => CloseChat(chatId))" />
}

<style>
    .chat-management {
        max-width: 800px;
        margin: 20px auto;
        display: flex;
        justify-content: center;
    }

    .new-chat-button {
        padding: 10px 20px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        font-weight: 500;
        background-color: #28a745;
        color: white;
    }

    .new-chat-button:hover {
        background-color: #218838;
    }
</style>

@code {
    private readonly List<Guid> _chats = [];
    private CancellationTokenSource? _cts;

    protected override async Task OnInitializedAsync()
    {
        _cts = new CancellationTokenSource();
        _ = MonitorNotificationsAsync(_cts.Token);
    }

    private async Task MonitorNotificationsAsync(CancellationToken cancellationToken)
    {
        try
        {
            var reader = NotificationService.GetReader();
            while (await reader.WaitToReadAsync(cancellationToken))
            {
                while (reader.TryRead(out var timestamp))
                {
                    await InvokeAsync(() =>
                    {
                        CreateNewChat();
                        StateHasChanged();
                    });
                }
            }
        }
        catch (OperationCanceledException)
        {
            // Normal shutdown
        }
    }

    public void Dispose()
    {
        _cts?.Cancel();
        _cts?.Dispose();
    }

    private void CreateNewChat()
    {
        _chats.Add(Guid.NewGuid());
    }

    private void CloseChat(Guid chatId)
    {
        _chats.Remove(chatId);
    }
}
